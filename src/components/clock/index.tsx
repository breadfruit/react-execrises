import React, {useState, useEffect, useCallback} from 'react';import useInterval from './useInterval';import useAnimationFrame from './useAnimationFrame';function Clock() {    const [state, setState] = useState(1000);    const [hours, setHours] = useState('');    const [mins, setMins] = useState('');    const [seconds, setSeconds] = useState('');    const formcat = function () {        //将秒换成时分秒        let temphours = Math.floor(state / 3600);        let tempmins = Math.floor(state % 3600 / 60);        let tempseonds = state % 60;        setHours(temphours <= 9 ? '0'+temphours : temphours.toString());        setMins(tempmins <= 9 ? '0'+tempmins : tempmins.toString());        setSeconds(tempseonds <= 9 ? '0'+tempseonds : tempseonds.toString());    };    useInterval(() => {        setState(state + 1);        formcat();    }, 1000);    const Counter = function () {        const [count, setCount] = React.useState(0);        useAnimationFrame(deltaTime => {            // Pass on a function to the setter of the state            // to make sure we always have the latest state            setCount(prevCount => (prevCount + 1))        });        return <div>{Math.round(count)}</div>;    };    return (        <div>            {hours} : {mins}: {seconds}            <hr />            <Counter />        </div>    )};export default Clock;