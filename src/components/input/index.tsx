import { Input  } from 'antd';import React, {useState, useCallback, useRef, useEffect} from 'react';const { Search } = Input;function MyInput() {        const [counter, setCounter] = useState("");        useEffect(function() {        }, []);        // const useDebounce = (fn: Function, delay: number, thisArg?: any) => {        //     let timer: number;        //     return useCallback(function (...args: any[]) {        //         if (timer) {        //             window.clearTimeout(timer);        //         };        //         timer = window.setTimeout(() => {        //             fn.apply(thisArg, args)        //         }, delay)        //     },[])        // }    function useDebounce(fn, delay) {        const ref = useRef({            fn,            timer: 0        });        // useEffect(() => {        //     // 更新引用        //     ref.current.fn = fn;        // }, [fn]);        function f(...args) {            if (ref.current.timer) {                clearTimeout(ref.current.timer);            }            ref.current.timer = window.setTimeout(() => {            // this 指向                ref.current.fn.call(this, ...args);            }, delay);        }        return f;    }        const onSearch1 = (e: Event) => {            const target = e.target as HTMLInputElement;            setCounter(target.value);            console.log('onSearch1=====',target.value);        }        const onSearch2 = (e: Event) => {            const target = e.target as HTMLInputElement;            setCounter(target.value);            console.log('onSearch2====',target.value);        }        return (            <>                {/*<Search*/}                {/*    placeholder="input search text"*/}                {/*    allowClear*/}                {/*    enterButton="Search"*/}                {/*    size="large"*/}                {/*    onSearch={useDebounce(onSearch, 1000)}*/}                {/*/>*/}                <input                placeholder="请输入测试数据"                onChange={useDebounce(onSearch1, 1000)} />                <input                    placeholder="请输入测试数据"                    onChange={useDebounce(onSearch2, 1000)} />            </>        )}export default  MyInput;