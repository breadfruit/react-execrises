import {useEffect, useRef, useState} from "react";const usePersistedState = function (name, defaultValue) {    const nameRef = useRef();    const [value, setValue] = useState(defaultValue);    useEffect(() => {        try{            const  storedValue = localStorage.getItem(name);            if (storedValue !== null) {                localStorage.setItem(name, storedValue);                setValue(storedValue)            }else{                setValue((defaultValue))            }        }catch (err) {            setValue(defaultValue)        }    }, []);    useEffect(() => {        try {            // @ts-ignore            localStorage.setItem(nameRef.current, value);        } catch {}    }, [value]);    useEffect(() => {        const lastName = nameRef.current;        if (lastName !== name) {            localStorage.setItem(name, value);            nameRef.current = name;            // @ts-ignore            localStorage.removeItem(lastName);        }    }, [name]);    return [value, setValue]};const  example = function (name: string){    const [val, setVal] = usePersistedState(name, 10);    return(        <input            value={val}            onChange={e => setVal(e.target.value)}        />    )}export default usePersistedState;