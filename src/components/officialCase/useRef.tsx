import {forwardRef, useRef, useImperativeHandle, useEffect} from 'react';import useLatest from "../utils/useLatest";export default function Ref() {    function FancyInput(props, ref) {        const inputRef = useRef(null);        useImperativeHandle(ref, () => ({            focus: () => {                // @ts-ignore                inputRef.current.focus();            },            value: () => {                // @ts-ignore                inputRef.current.value = '111'                console.log(inputRef.current)            }        }));        return <input ref={inputRef}/>;    }    // @ts-ignore    FancyInput = forwardRef(FancyInput);    const inputref = useRef();    useEffect(() => {        console.log('inputref====',inputref.current);        // @ts-ignore        inputref.current.focus();        // @ts-ignore        inputref.current.value();    }, [inputref])    return (        <FancyInput ref={inputref}></FancyInput>    )}